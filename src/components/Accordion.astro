---
const { title = "Accordion Title", open = true } = Astro.props;

// Convert open to a boolean â€” if it's a string "false", it should be false
const isOpen =
  typeof open === "string" ? open.toLowerCase() !== "false" : Boolean(open);
const titleId = title.toLowerCase().replace(/\s+/g, "-");
---

<div id={`${titleId}`} class="accordion" data-open={isOpen}>
  <button
    class="accordion-button"
    aria-expanded={isOpen ? "true" : "false"}
    type="button"
  >
    <h1 class="big-text">{title}</h1>
  </button>
  <div
    class="accordion-content relative"
    role="region"
    aria-hidden={isOpen ? "false" : "true"}
  >
    <slot />
  </div>
</div>

<script>
  document.querySelectorAll(".accordion").forEach((accordion) => {
    const button = accordion.querySelector(".accordion-button");
    const content = accordion.querySelector(".accordion-content");

    function setHeight(expanded) {
      if (expanded) {
        content.style.height = content.scrollHeight + "px";
        content.setAttribute("aria-hidden", "false");
        content.addEventListener(
          "transitionend",
          () => {
            if (button.getAttribute("aria-expanded") === "true") {
              content.style.height = "auto";
            }
          },
          { once: true },
        );
      } else {
        content.style.height = content.scrollHeight + "px";
        requestAnimationFrame(() => {
          content.style.height = "0";
          content.setAttribute("aria-hidden", "true");
        });
      }
    }

    // Initialize accordion content height based on initial aria-expanded value
    setHeight(button.getAttribute("aria-expanded") === "true");

    button.addEventListener("click", () => {
      const expanded = button.getAttribute("aria-expanded") === "true";
      button.setAttribute("aria-expanded", expanded ? "false" : "true");
      setHeight(!expanded);
    });
  });
</script>
